name: Lambda CI/CD

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-central-1
  FUNCTION_NAME: func
  ECR_REPOSITORY: repo

jobs:
  test:
    name: Test Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.ECR_REPOSITORY }}:latest
          load: true

      - name: Run tests
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.ECR_REPOSITORY }}:latest
          options: -e variable=value
          run: pytest test.py

      - name: Save image as tar for next run
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.ECR_REPOSITORY }}:latest
          outputs: type=docker,dest=/tmp/docker-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: /tmp/docker-image.tar

  deploy:
    needs: [test]
    name: Deploy Lambda Function

    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load --input /tmp/docker-image.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push API image to Amazon ECR
        id: retag-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update lambda to use latest image
        run: aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri ${{ steps.build-image.outputs.image }}
